% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/has_peak.R
\name{has_peak}
\alias{has_peak}
\title{Test whether a phases has a peak.}
\usage{
has_peak(x, npeaks = 1, steps = 2)
}
\arguments{
\item{x}{A numeric vector on which to test the existance of one or more peaks}

\item{npeaks}{An integer specifying the number of peaks to look for.}

\item{steps}{An interger specifying the number of points for a given
points to qualify for a peak.}
}
\value{
a list containing of the indices of the peaks and logical test.
}
\description{
Takes a vector and returns a list containing the indices of one or more peaks and
TRUE as test if it found a peak. if no peak is found, then has_peak () will returned
null as peak  and set the test to FALSE. Applied to phases slot of the phases object (see ?phases)
this function can help to determine whether a phase qualifies for a season or not.
Note that a season is a phases having a peak.
}
\details{
\code{has_peak ()} extends \code{get_falls ()} in the sense that it just internally applies
\code{get_falls ()} function to - x to locate the peaks and add the logical test.
}
\examples{
## data with complete cases
nam<- seq.Date(from = as.Date('2016-01-01'), to = as.Date ('2018-12-31'), by = 16)
dy11 <- c(1.40, 1.00, 1.50, 2.00, 5.00, 3.00, 1.00, 0.76, 2.00, 1.00, 3.50, 3.00, 1.50)
dy12 <- c(1.30, 1.10, 1.40, 2.01, 5.50, 2.80, 1.01, 1, 2.03, 1.09, 3.10, 3.00, 1.50)
dy1 <- c(dy11, dy12)
names(dy1) <- nam[1:length(dy1)]

default_par <- par()
layout(rbind(c(1, 1), c(2, 3)))
par(mar = c(2, 2, 1, 1))
plot (dy1, type = 'o')
y <- phases (dy1, ts_freq = 12)
y <- y$phases
lapply (y, has_peak)
lapply (y, plot, type = 'o')


## data with manageable number of NAs
dy2 <- dy1
dy2[23:length(dy2)] <- NA

plot (dy2, type = 'o')
y <- phases (dy2, ts_freq = 12)
y <- y$phases
lapply (y, has_peak)
lapply (y, plot, type = 'o')


## data with unmanageable number of NAs. This does not make sense as a season!
dy3 <- dy1
dy3[13:20] <- NA

plot (dy3, type = 'o')
y <- phases (dy3, ts_freq = 12)
y <- y$phases
lapply (y, has_peak)
lapply (y, plot, type = 'o')
par(default_par)
}
\seealso{
\code{\link[SpatialProbs]{get_falls}}
}
\author{
Issoufou Liman
}
